{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"gpuType":"T4","authorship_tag":"ABX9TyPIE9gNUdLhaH/2jdqKbyOo"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":449},"id":"0ZTqVRPEOdO9","executionInfo":{"status":"ok","timestamp":1747998267981,"user_tz":-300,"elapsed":148142,"user":{"displayName":"Minds_ Labs","userId":"15908875802037036323"}},"outputId":"906af8d5-62e9-4e9b-b8f7-0dde88f35a7c"},"outputs":[{"output_type":"stream","name":"stderr","text":["INFO patool: Extracting /content/Certificate.rar ...\n","INFO:patool:Extracting /content/Certificate.rar ...\n","INFO patool: running /usr/bin/unrar x -kb -or -- /content/Certificate.rar\n","INFO:patool:running /usr/bin/unrar x -kb -or -- /content/Certificate.rar\n","INFO patool: ... /content/Certificate.rar extracted to `/content/Certificate'.\n","INFO:patool:... /content/Certificate.rar extracted to `/content/Certificate'.\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","<style>\n","    /* Turns off some styling */\n","    progress {\n","        /* gets rid of default border in Firefox and Opera. */\n","        border: none;\n","        /* Needs to be in here for Safari polyfill so background images work as expected. */\n","        background-size: auto;\n","    }\n","    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n","        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n","    }\n","    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n","        background: #F44336;\n","    }\n","</style>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: left;\">\n","      <th>epoch</th>\n","      <th>train_loss</th>\n","      <th>valid_loss</th>\n","      <th>accuracy</th>\n","      <th>time</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <td>0</td>\n","      <td>1.084541</td>\n","      <td>0.126057</td>\n","      <td>1.000000</td>\n","      <td>00:28</td>\n","    </tr>\n","  </tbody>\n","</table>"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","<style>\n","    /* Turns off some styling */\n","    progress {\n","        /* gets rid of default border in Firefox and Opera. */\n","        border: none;\n","        /* Needs to be in here for Safari polyfill so background images work as expected. */\n","        background-size: auto;\n","    }\n","    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n","        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n","    }\n","    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n","        background: #F44336;\n","    }\n","</style>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: left;\">\n","      <th>epoch</th>\n","      <th>train_loss</th>\n","      <th>valid_loss</th>\n","      <th>accuracy</th>\n","      <th>time</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <td>0</td>\n","      <td>0.002426</td>\n","      <td>0.000461</td>\n","      <td>1.000000</td>\n","      <td>00:28</td>\n","    </tr>\n","    <tr>\n","      <td>1</td>\n","      <td>0.001231</td>\n","      <td>0.000022</td>\n","      <td>1.000000</td>\n","      <td>00:28</td>\n","    </tr>\n","    <tr>\n","      <td>2</td>\n","      <td>0.000797</td>\n","      <td>0.000012</td>\n","      <td>1.000000</td>\n","      <td>00:29</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>0.000566</td>\n","      <td>0.000013</td>\n","      <td>1.000000</td>\n","      <td>00:27</td>\n","    </tr>\n","  </tbody>\n","</table>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Model fayli mavjudmi: True\n","To‘liq yo‘l: /content/Model_14_1_1.pkl\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/fastai/learner.py:455: UserWarning: load_learner` uses Python's insecure pickle module, which can execute malicious arbitrary code when loading. Only load files you trust.\n","If you only need to load model weights and optimizer state, use the safe `Learner.load` instead.\n","  warn(\"load_learner` uses Python's insecure pickle module, which can execute malicious arbitrary code when loading. Only load files you trust.\\nIf you only need to load model weights and optimizer state, use the safe `Learner.load` instead.\")\n"]}],"source":["\n","import platform\n","import patoolib\n","import pathlib  # <-- Qo‘shildi\n","from pathlib import Path\n","from fastai.vision.all import *\n","from PIL import ImageFile\n","\n","ImageFile.LOAD_TRUNCATED_IMAGES = True  # Agar ba'zi rasm fayllar buzilgan bo‘lsa, ularni ham o‘qiydi\n","\n","# Windowsda PosixPath muammosini hal qilish uchun:\n","if platform.system() == \"Windows\":\n","    pathlib.PosixPath = pathlib.WindowsPath\n","\n","# RAR faylni ajratish (platformaga qarab yo'l tanlanadi)\n","if platform.system() == \"Windows\":\n","    rar_file_path = Path(r\"C:/Desktop/Musor/Certificate.rar\")  # Yo'lni moslang\n","    extraction_dir = Path(r\"C:/Desktop/Musor/Certificate\")\n","else:\n","    rar_file_path = Path(\"/content/Certificate.rar\")\n","    extraction_dir = Path(\"/content/Certificate\")\n","\n","# RAR faylni ochish\n","patoolib.extract_archive(str(rar_file_path), outdir=str(extraction_dir))\n","\n","# Rasmlar joylashgan papka\n","path = extraction_dir\n","\n","# DataBlock yaratish\n","dblock = DataBlock(\n","    blocks=(ImageBlock, CategoryBlock),\n","    get_items=get_image_files,\n","    splitter=RandomSplitter(valid_pct=0.2, seed=42),\n","    get_y=parent_label,\n","    item_tfms=Resize(224)\n",")\n","\n","# DataLoaders tayyorlash\n","dls = dblock.dataloaders(path)\n","\n","# Model yaratish\n","learn = vision_learner(dls, resnet34, metrics=accuracy)\n","\n","# Modelni o‘rgatish\n","learn.fine_tune(4)\n","\n","# Modelni saqlash\n","model_path = Path(\"/content/Model_14_1_1.pkl\")  # papkaning ichida emas\n","learn.export(fname=model_path)\n","\n","# Tekshirish: model saqlandimi?\n","print(\"Model fayli mavjudmi:\", model_path.exists())\n","print(\"To‘liq yo‘l:\", model_path)\n","\n","# Modelni yuklash\n","learn_loaded = load_learner(str(model_path))\n","\n","# Sinov uchun (rasm bo‘lsa faollashtiring)\n","# test_image = extraction_dir / \"test.jpg\"\n","# pred_class, pred_idx, outputs = learn_loaded.predict(test_image)\n","# print(\"Taxmin:\", pred_class)\n"]},{"cell_type":"code","source":[],"metadata":{"id":"xoyFGJyIyvSc"},"execution_count":null,"outputs":[]}]}